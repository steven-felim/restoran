CREATE DATABASE restoran;

CREATE TABLE room (
	room_id INT PRIMARY KEY,
	type ENUM
);

CREATE TABLE table (
	table_id INT PRIMARY KEY,
	room_id INT PRIMARY KEY,
	FOREIGN KEY(room_id) REFERENCES room(room_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE fnb (
	fnb_id INT PRIMARY KEY,
	name VARCHAR(255) NOT NULL,
	STOCK INT DEFAULT 0,
	price INT DEFAULT 0,
);

CREATE TABLE voucher (
	voucher_id INT PRIMARY KEY,
	name VARCHAR(255) NOT NULL,
	discount DOUBLE(2, 2)
);

CREATE TABLE user (
	user_id INT AUTO_INCREMENT PRIMARY KEY,
	username VARCHAR(255) NOT NULL
);

CREATE TABLE admin (
	user_id INT PRIMARY KEY,
	username VARCHAR(255) NOT NULL,
	email VARCHAR(255) NOT NULL,
	password VARCHAR(255) NOT NULL,
	cellphone VARCHAR(13),
	FOREIGN KEY(user_id) REFERENCES user(user_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(username) REFERENCES user(username)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
);

CREATE TABLE employee (
	user_id INT PRIMARY KEY,
	username VARCHAR(255) NOT NULL,
	email VARCHAR(255) NOT NULL,
	password VARCHAR(255) NOT NULL,
	cellphone VARCHAR(13),
	jobdesk ENUM,
	FOREIGN KEY(user_id) REFERENCES user(user_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(username) REFERENCES user(username)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE member (
	user_id INT PRIMARY KEY,
	username VARCHAR(255) NOT NULL,
	email VARCHAR(255) NOT NULL,
	password VARCHAR(255) NOT NULL,
	cellphone VARCHAR(13),
	point INT DEFAULT 0,
	FOREIGN KEY(user_id) REFERENCES user(user_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(username) REFERENCES user(username)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE booktable (
	book_id INT PRIMARY KEY,
	table_id INT NOT NULL,
	user_id INT NOT NULL,
	date DATE NOT NULL,
	status ENUM,
	FOREIGN KEY(table_id) REFERENCES table(table_id)
		ON DELETE SET NULL
		ON UPDATE CASCADE
	FOREIGN KEY(user_id) REFERENCES user(user_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE	
);

CREATE TABLE cart (
	cart_id INT PRIMARY KEY,
	fnb_id INT NOT NULL,
	user_id INT NOT NULL,
	quantity INT,
	FOREIGN KEY(fnb_id) REFERENCES fnb(fnb_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(user_id) REFERENCES fnb(user_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE wallet (
	wallet_id INT PRIMARY KEY,
	user_id INT NOT NULL,
	balance DOUBLE(7,2) DEFAULT 0,
	pin CHAR(6) NOT NULL,
	FOREIGN KEY(user_id) REFERENCES user(user_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE transaction (
	wallet_id INT PRIMARY KEY,
	user_id INT NOT NULL,
	cart_id INT NOT NULL,
	voucher_id INT,
	date DATE,
	status STATUS,
	FOREIGN KEY(user_id) REFERENCES user(user_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(fnb_id) REFERENCES fnb(fnb_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(voucher_id) REFERENCES voucher(voucher_id)
		ON DELETE SET NULL
		ON UPDATE CASCADE
);