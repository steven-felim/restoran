CREATE DATABASE restoran;

CREATE TABLE room (
	room_id INT PRIMARY KEY,
	type ENUM ('REGULAR', 'OUTDOOR', 'VIP') NOT NULL
);

CREATE TABLE tables (
	table_id INT,
	room_id INT,
	PRIMARY KEY (table_id, room_id),
	FOREIGN KEY(room_id) REFERENCES room(room_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE fnb (
	fnb_id INT PRIMARY KEY,
	name VARCHAR(255) NOT NULL,
	STOCK INT DEFAULT 0,
	price INT DEFAULT 0
);

CREATE TABLE voucher (
	voucher_id INT PRIMARY KEY,
	name VARCHAR(255) NOT NULL,
	discount DOUBLE(2, 2)
);

CREATE TABLE user (
	user_id INT PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(255) NOT NULL,
	email VARCHAR(255),
	password VARCHAR(255),
	cellphone VARCHAR(13),
	role ENUM('ADMIN', 'EMPLOYEE', 'MEMBER', 'GUEST') NOT NULL
);

CREATE TABLE jobdesk (
	user_id INT PRIMARY KEY,
	jobdesk ENUM('CASHIER', 'CHEF', 'WAITER', 'DELIVERYMAN') NOT NULL,
	FOREIGN KEY(user_id) REFERENCES user(user_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE point (
	user_id INT PRIMARY KEY,
	point INT,
	FOREIGN KEY(user_id) REFERENCES user(user_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE wallet (
	wallet_id INT PRIMARY KEY,
	user_id INT NOT NULL,
	balance DOUBLE(7,2) DEFAULT 0,
	pin CHAR(6) NOT NULL,
	FOREIGN KEY(user_id) REFERENCES user(user_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE booktable (
	book_id INT PRIMARY KEY,
	table_id INT NOT NULL,
	user_id INT NOT NULL,
	date DATE NOT NULL,
	status ENUM('AVAILABLE', 'BOOKED') NOT NULL,
	FOREIGN KEY(table_id) REFERENCES tables(table_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(user_id) REFERENCES user(user_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE	
);

CREATE TABLE cart (
	cart_id INT PRIMARY KEY,
	fnb_id INT NOT NULL,
	user_id INT NOT NULL,
	quantity INT,
	FOREIGN KEY(fnb_id) REFERENCES fnb(fnb_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(user_id) REFERENCES user(user_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE transaction (
	transaction_id INT PRIMARY KEY,
	user_id INT NOT NULL,
	cart_id INT NOT NULL,
	wallet_id INT,
	voucher_id INT,
	date DATE,
	status ENUM ('PENDING','SUCCESS') NOT NULL,
	FOREIGN KEY(user_id) REFERENCES user(user_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(cart_id) REFERENCES cart(fnb_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(wallet_id) REFERENCES wallet(wallet_id)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	FOREIGN KEY(voucher_id) REFERENCES voucher(voucher_id)
		ON DELETE SET NULL
		ON UPDATE CASCADE
);